{"version":3,"sources":["components/header/header.js","components/search-bar/search-bar.js","views/main-view/main-view.js","views/add-view/add-view.js","views/edit-view/edit-view.js","views/item-view/item-view.js","App.js","serviceWorker.js","index.js"],"names":["Example","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","Navbar","bg","variant","expand","react_router_dom","className","exact","to","Toggle","aria-controls","Collapse","id","Nav","React","Component","SearchBar","Fragment","InputGroup","FormControl","placeholder","aria-label","aria-describedby","value","search","onChange","onSearch","Append","Text","react_fontawesome_index_es","icon","MainView","onEditClick","evt","currentTarget","dataset","itemId","console","log","onDeleteClick","axios","delete","concat","then","res","getInventory","catch","error","setState","target","searchValue","term","get","currentState","nextState","items","data","assign","_","debounce","_this2","_this3","Container","Row","Col","search_bar","ListGroup","as","map","item","i","Item","key","_id","name","manufacturer","cost","Button","data-item-id","onClick","AddView","onFieldChange","productName","serial","onAddItem","preventDefault","post","nameLower","toLowerCase","imageUrl","receiptImageUrl","serialImageUrl","thumbnailUrl","response","redirectToMain","react_router","Form","Group","controlId","Label","Control","type","EditView","onEditSubmitItem","match","params","ItemView","Jumbotron","fluid","Image","src","library","add","faPlus","faEdit","faTrashAlt","faSearch","App","header_Example","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f64eeb30.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Navbar,\n  Nav\n } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport './header.scss';\n\nexport default class Example extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  \n  render() {\n    return (\n      <div>\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n          <Link className=\"nav-link nav-brand\" exact=\"true\" to=\"/\">Coverage</Link>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Link className=\"nav-link\" exact=\"true\" to=\"/\">My Items</Link>\n              <Link className=\"nav-link\" to=\"/add\">Add</Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport {\n    InputGroup,\n    FormControl\n} from 'react-bootstrap';\n\nclass SearchBar extends Component {\n\n    render() {\n        return (\n            <>\n                <InputGroup className=\"mb-3\">\n                    <FormControl\n                    placeholder=\"Search\"\n                    aria-label=\"Search bar\"\n                    aria-describedby=\"search-bar\"\n                    value={this.props.search} \n                    onChange={this.props.onSearch}\n                    />\n                    <InputGroup.Append>\n                        <InputGroup.Text id=\"search-bar\">\n                            <FontAwesomeIcon icon=\"search\" />\n                        </InputGroup.Text>\n                    </InputGroup.Append>\n                </InputGroup>\n\n            </>\n        );\n    }\n}\n\nexport default SearchBar;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { \n    Container, \n    Row, \n    Col, \n    ListGroup,\n    Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport _ from 'lodash';\n\nimport SearchBar from \"../../components/search-bar/search-bar\";\n\nimport './main-view.scss';\n\n\nclass MainView extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            search: \"\",\n            items: []\n        };\n\n        this.searchValue = _.debounce(this.searchValue, 300);\n    }\n\n    onEditClick = (evt) => {\n        const id = evt.currentTarget.dataset.itemId;\n        console.log(\"Edit item clicked: \", id);\n    }\n\n    onDeleteClick = (evt) => {\n\n        const id = evt.currentTarget.dataset.itemId;\n\n        axios.delete(`/item/delete/${id}`)\n            .then(res => {\n                this.getInventory();\n            })\n            .catch(function (error) {\n                // handle error\n                console.error(error);\n            })\n\n        console.log(\"Delete item clicked: \", id);\n    }\n\n    getInventory() {\n        axios.get('/items/get')\n            .then(res => {\n                const currentState = this.state;    \n                const nextState = {\n                    items: res.data.items\n                };\n                this.setState(Object.assign({}, currentState, nextState));\n            })\n            .catch(function (error) {\n                // handle error\n                console.error(error);\n            })\n    }\n\n    componentDidMount() {\n\n        this.getInventory();\n    }\n\n    onSearch = (evt) => {\n        this.setState({\n            \"search\" : evt.target.value\n        });\n\n        this.searchValue(evt.target.value);\n    }\n\n    searchValue = (term) => {\n        axios.get(`/items/find/${term}`)\n            .then(res => {\n                const currentState = this.state;    \n                const nextState = {\n                    items: res.data.items\n                };\n                this.setState(Object.assign({}, currentState, nextState));\n            })\n    }\n\n    render() {\n        return(\n            <Container className=\"main-view\">\n                <Row>\n                    <Col className=\"mt-3\">\n                        <Link to={`/add`}>Add<FontAwesomeIcon icon=\"plus\" /></Link>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col className=\"mt-3\">\n                        <SearchBar search={this.state.search} onSearch={this.onSearch}/>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <ListGroup as=\"ul\">\n                            {\n                                this.state.items.map((item, i) => {\n                                    return (\n                                        <ListGroup.Item as=\"li\" key={item._id} >\n                                            {/* <img src=\"https://via.placeholder.com/100?text=Image+Of+Item\" alt=\"item\"/> */}\n                                            <h4>{item.name}</h4>\n                                            <h5>{item.manufacturer}</h5>\n                                            <p>{item.cost}</p>\n                                            \n                                            <div className=\"float-right mx-2\">\n                                                <Button variant=\"danger\" data-item-id={item._id} onClick={this.onDeleteClick}>\n                                                    <FontAwesomeIcon icon=\"trash-alt\" />\n                                                </Button>\n                                            </div>\n\n                                            <div className=\"float-right mx-2\" >\n                                                <Link to={`/edit/${item._id}`}>\n                                                    <Button variant=\"dark\" data-item-id={item._id} onClick={this.onEditClick}>\n                                                        <FontAwesomeIcon icon=\"edit\" />\n                                                    </Button>\n                                                </Link>\n                                            </div>    \n                                            \n                                        </ListGroup.Item>\n                                    );\n                                })\n                            }\n                        </ListGroup>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default MainView;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport { Button, Form, Container, Row, Col } from 'react-bootstrap';\n\nclass AddView extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            productName: \"\",\n            manufacturer: \"\",\n            serial: \"\",\n            cost: \"\",\n            redirectToMain: false\n        }\n    }\n\n    onFieldChange = (evt) => {\n        switch (evt.target.id) {\n            case 'name-input':\n                this.setState({\n                    productName: evt.target.value\n                });\n                break;\n            case 'manufacturer-input':\n                this.setState({\n                    manufacturer: evt.target.value\n                });\n                break;\n            case 'serial-input' :\n                this.setState({\n                    serial: evt.target.value\n                });\n                break;\n\n            case 'cost-input' :\n                this.setState({\n                    cost: evt.target.value\n                });\n                break;\n\n            default:\n                console.log(\"No known input\");\n        }\n    }\n\n    onAddItem = (evt) => {\n        evt.preventDefault();\n        console.log(\"Add Item!!!\");\n        console.log(\"Product name: \", this.state.productName);\n        console.log(\"Manufacturer: \", this.state.manufacturer);\n        console.log(\"Serial: \", this.state.serial);\n        console.log(\"Cost: \", this.state.cost);\n\n        axios.post('/item/create', {\n            \"name\": this.state.productName,\n            \"nameLower\": this.state.productName.toLowerCase(),\n            \"manufacturer\": this.state.manufacturer,\n            \"serial\": this.state.serial,\n            \"cost\" : this.state.cost,\n            \"imageUrl\": \"http://via.placeholder.com/1600x500\",\n            \"receiptImageUrl\": \"http://via.placeholder.com/500x100\",\n            \"serialImageUrl\": \"http://via.placeholder.com/360x640\",\n            \"thumbnailUrl\": \"http://via.placeholder.com/100x100\"\n        })\n        .then((response) => {\n            this.setState({\n                redirectToMain: true\n            });\n        })\n        .catch((error) => {\n            console.error(\"No BUENO!!!: \", error);\n        });\n    }\n\n    render() {\n        const { redirectToMain } = this.state;\n\n        if(redirectToMain) {\n            return(\n                <Redirect exact to=\"/\" />     \n            );\n        } else {\n            return (\n                <Container>\n                    <Row>\n                        <Col>\n                            <Form>\n                                <Form.Group controlId=\"name-input\">\n                                    <Form.Label>Product Name</Form.Label>\n                                    <Form.Control \n                                        placeholder=\"\" \n                                        value={this.state.productName} \n                                        onChange={this.onFieldChange}/>   \n                                </Form.Group>\n    \n                                <Form.Group controlId=\"manufacturer-input\">\n                                    <Form.Label>Manufacturer</Form.Label>\n                                    <Form.Control \n                                        placeholder=\"\" \n                                        value={this.state.manufacturer}\n                                        onChange={this.onFieldChange}/>   \n                                </Form.Group>\n    \n                                <Form.Group controlId=\"serial-input\">\n                                    <Form.Label>Serial</Form.Label>\n                                    <Form.Control \n                                        placeholder=\"\"\n                                        value={this.state.serial}\n                                        onChange={this.onFieldChange} />   \n                                </Form.Group>\n    \n                                <Form.Group controlId=\"cost-input\">\n                                    <Form.Label>Cost</Form.Label>\n                                    <Form.Control \n                                        placeholder=\"\" \n                                        value={this.state.cost}\n                                        onChange={this.onFieldChange}/>   \n                                </Form.Group>\n    \n                                <Button variant=\"primary\" type=\"submit\" onClick={this.onAddItem}>\n                                    Submit\n                                </Button>\n                            </Form>\n                        </Col>\n                    </Row>\n                </Container>\n            );\n        }\n    }\n}\n\nexport default AddView;","import React, { Component } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { Button, Form, Container, Row, Col } from 'react-bootstrap';\n\nimport axios from 'axios';\n\nclass EditView extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            productName: \"\",\n            manufacturer: \"\",\n            serial: \"\",\n            cost: \"\",\n            redirectToMain: false\n        }\n    }\n\n    onFieldChange = (evt) => {\n        switch (evt.target.id) {\n            case 'name-input':\n                this.setState({\n                    productName: evt.target.value\n                });\n                break;\n            case 'manufacturer-input':\n                this.setState({\n                    manufacturer: evt.target.value\n                });\n                break;\n            case 'serial-input' :\n                this.setState({\n                    serial: evt.target.value\n                });\n                break;\n\n            case 'cost-input' :\n                this.setState({\n                    cost: evt.target.value\n                });\n                break;\n\n            default:\n                console.log(\"No known input\");\n        }\n    }\n\n    onEditSubmitItem = (evt) => {\n\n        evt.preventDefault();\n\n        const { id } = this.props.match.params;\n\n        axios.post(`/item/edit/${id}`, {\n            \"name\": this.state.productName,\n            \"nameLower\": this.state.productName.toLowerCase(),\n            \"manufacturer\": this.state.manufacturer,\n            \"serial\": this.state.serial,\n            \"cost\" : this.state.cost,\n            \"imageUrl\": \"http://via.placeholder.com/1600x500\",\n            \"receiptImageUrl\": \"http://via.placeholder.com/500x100\",\n            \"serialImageUrl\": \"http://via.placeholder.com/360x640\",\n            \"thumbnailUrl\": \"http://via.placeholder.com/100x100\"\n        })\n        .then((res) => {\n            this.setState({\n                redirectToMain: true\n            });\n        })\n        .catch((error) => {\n            console.error(\"No BUENO!!!: \", error);\n        });\n    }\n\n    componentDidMount() {\n\n        const { id } = this.props.match.params;\n\n        axios.get(`/item/get/${id}`)\n            .then(res => {\n                const item = res.data.item;\n\n                this.setState({\n                    productName: item.name,\n                    manufacturer: item.manufacturer,\n                    serial: item.serial,\n                    cost: item.cost\n                });\n            })\n    }\n\n    render() {\n        const { redirectToMain } = this.state;\n\n        if(redirectToMain) {\n            return(\n                <Redirect exact to=\"/\" />     \n            );\n        } else {\n            return (\n                <Container>\n                    <Row>\n                        <Col>\n                            <Form>\n                                <Form.Group controlId=\"name-input\">\n                                    <Form.Label>Product Name</Form.Label>\n                                    <Form.Control \n                                        placeholder=\"\" \n                                        value={this.state.productName} \n                                        onChange={this.onFieldChange}/>   \n                                </Form.Group>\n    \n                                <Form.Group controlId=\"manufacturer-input\">\n                                    <Form.Label>Manufacturer</Form.Label>\n                                    <Form.Control \n                                        placeholder=\"\" \n                                        value={this.state.manufacturer}\n                                        onChange={this.onFieldChange}/>   \n                                </Form.Group>\n    \n                                <Form.Group controlId=\"serial-input\">\n                                    <Form.Label>Serial</Form.Label>\n                                    <Form.Control \n                                        placeholder=\"\"\n                                        value={this.state.serial}\n                                        onChange={this.onFieldChange} />   \n                                </Form.Group>\n    \n                                <Form.Group controlId=\"cost-input\">\n                                    <Form.Label>Cost</Form.Label>\n                                    <Form.Control \n                                        placeholder=\"\" \n                                        value={this.state.cost}\n                                        onChange={this.onFieldChange}/>   \n                                </Form.Group>\n    \n                                <Button variant=\"primary\" type=\"submit\" onClick={this.onEditSubmitItem}>\n                                    Submit\n                                </Button>\n\n\n                                <Link to={`/`}>\n                                    <Button variant=\"danger\" type=\"submit\">\n                                        Cancel\n                                    </Button>\n                                </Link>\n\n                            </Form>\n                        </Col>\n                    </Row>\n                </Container>\n            );\n        }\n    }\n}\n\nexport default EditView;","import React, { Component } from 'react';\n\nimport {\n    Jumbotron,\n    Container,\n    Image,\n    Row,\n    Col\n} from 'react-bootstrap';\n\nclass ItemView extends Component {\n\n    componentDidMount() {\n        const { match } = this.props;\n\n        console.log(\"Match is: \", match.params.id);\n    }\n\n    render() {\n        return(\n            <>\n                {/* Item name and image */}\n                <Jumbotron fluid>\n                    <Container>\n                        <h1>Item Name</h1>\n                        <Image src=\"https://via.placeholder.com/768x320.png\" fluid />\n                    </Container>\n                </Jumbotron>\n\n                <Container>\n\n                {/* Manufacturer */}\n                    <Row>\n                        <Col>\n                            \n                        </Col>\n                    </Row>\n\n                {/* Serial # */}\n\n                {/* Cost */}\n\n                {/* Receipt */}\n                </Container>\n\n            </>\n        );\n    }\n}\n\nexport default ItemView;","import React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faPlus, faEdit, faTrashAlt, faSearch } from '@fortawesome/free-solid-svg-icons';\n//import logo from './logo.svg';\n\n//Global Components\nimport Header from './components/header/header';\n\n//Views\nimport MainView from './views/main-view/main-view';\nimport AddView from './views/add-view/add-view';\nimport EditView from './views/edit-view/edit-view';\nimport ItemView from './views/item-view/item-view';\n\n//Import font awesome icons\nlibrary.add(faPlus);\nlibrary.add(faEdit);\nlibrary.add(faTrashAlt);\nlibrary.add(faSearch);\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={MainView}/>\n          <Route exact path=\"/add\" component={AddView}/>\n          <Route exact path=\"/edit/:id\" component={EditView}/>\n          <Route exact path=\"/item/:id\" component={ItemView}/>\n        </Switch>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render((\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  ), document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}